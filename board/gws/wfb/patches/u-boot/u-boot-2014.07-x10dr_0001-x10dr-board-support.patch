From 5ea59cadfe50497fed0d4c5267b3876bb07efe22 Mon Sep 17 00:00:00 2001
From: Hoang Tran <hoang.tran@greenwavereality.com>
Date: Sat, 24 Oct 2015 14:40:58 -0700
Subject: [PATCH] x10dr board support

Signed-off-by: Hoang Tran <hoang.tran@greenwavereality.com>
---
 arch/arm/dts/Makefile        |   1 +
 arch/arm/dts/g2_x10dr.dts    |  16 ++
 board/cortina/x10dr/Makefile |  25 +++
 board/cortina/x10dr/x10dr.c  | 163 ++++++++++++++++
 boards.cfg                   |   1 +
 include/configs/g2_x10dr.h   | 439 +++++++++++++++++++++++++++++++++++++++++++
 tools/env/Makefile           |   2 +
 7 files changed, 647 insertions(+)
 create mode 100644 arch/arm/dts/g2_x10dr.dts
 create mode 100644 board/cortina/x10dr/Makefile
 create mode 100644 board/cortina/x10dr/x10dr.c
 create mode 100644 include/configs/g2_x10dr.h

--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -33,6 +33,7 @@ dtb-$(CONFIG_ZYNQ) += zynq-zc702.dtb \
 	zynq-zc770-xm012.dtb \
 	zynq-zc770-xm013.dtb
 dtb-$(CONFIG_AM33XX) += am335x-boneblack.dtb
+dtb-$(CONFIG_G2) += g2_x10dr.dtb
 
 targets += $(dtb-y)
 
--- /dev/null
+++ b/arch/arm/dts/g2_x10dr.dts
@@ -0,0 +1,16 @@
+/dts-v1/;
+
+#include "skeleton.dtsi"
+
+/ {
+        model = "x10dr";
+        compatible = "cortina,g2";
+
+        signature {
+                key-kernel {
+                        required = "conf";
+                        algo = "sha1,rsa2048";
+                        key-name-hint = "kernel";
+                };
+        };
+};
--- /dev/null
+++ b/board/cortina/x10dr/Makefile
@@ -0,0 +1,25 @@
+#
+# (C) Copyright 2000, 2001, 2002
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# See file CREDITS for list of people who contributed to this
+# project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+obj-y	:= $(BOARD).o
+
--- /dev/null
+++ b/board/cortina/x10dr/x10dr.c
@@ -0,0 +1,199 @@
+/*
+ * (C) Copyright 2013
+ * Hoang Tran <hoang.tran@greenwavereality.com>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+#include <common.h>
+#include <i2c.h>
+#include <asm/io.h>
+#include <asm/arch/register.h>
+#include <asm/arch/gpio.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#ifdef CONFIG_DISPLAY_CPUINFO
+/**
+ * Print CPU information
+ */
+int print_cpuinfo(void)
+{
+	printf("CPU: GoldenGate (CS7542) SoC ASIC\n");
+	return 0;
+}
+#endif
+
+#ifdef CONFIG_DISPLAY_BOARDINFO
+/**
+ * Print board information
+ */
+int checkboard(void)
+{
+	printf("Board: Verizon/GWR X10DR board\n");
+	return 0;
+}
+#endif
+
+#ifdef CONFIG_LAST_STAGE_INIT
+#ifdef CONFIG_RTL83XX
+extern int rtl83xx_init(void);
+#endif
+#ifdef CONFIG_QCASW
+extern int qca83xx_init(void);
+#endif
+#ifdef CONFIG_LP5521
+/* Init magic LED as white and fast flash at 2Hz */
+void lp5521_init(unsigned long white)
+{
+	int i;
+	static unsigned char fast_blink[] = {
+		0x40, 0xff, /* Set PWM to 0xff */
+		0x50, 0x00, /* Wait for 250ms  */
+		0x40, 0x00, /* Set PWM to 0    */
+		0x50, 0x00, /* Wait for 250ms  */
+		0x00, 0x00, /* Go to Start     */
+	};
+
+	i2c_reg_write(0x32, 0xD, 0xff); /* reset all registers */
+	i2c_reg_write(0x32, 0x0, 0xea);
+	i2c_reg_write(0x32, 0x8, 0x59);
+	i2c_reg_write(0x32, 0x1, 0x15);
+	for (i=0; i<3; i++) {
+		fast_blink[1] = (unsigned char) (white >> (i * 8));
+		i2c_write(0x32, 0x10 + 0x20*i, 1, fast_blink, sizeof(fast_blink));
+	}
+	i2c_reg_write(0x32, 0x1, 0x2a);
+}
+#endif
+static int is_OTP_locked()
+{
+	return (0xf5008804 & (1<<25) != 0);
+}
+
+int last_stage_init(void)
+{
+#ifdef CONFIG_RTL83XX
+	rtl83xx_init();
+#endif
+#ifdef CONFIG_QCASW
+	qca83xx_init();
+#endif
+#ifdef CONFIG_LP5521
+	lp5521_init(getenv_hex("lp5521_white", 0x00bfffcf));
+#endif
+	/* force verify Linux if otp is lock */
+	if (is_OTP_locked()) setenv("verify", "y");
+
+	return 0;
+}
+#endif
+
+#if 0
+static u32 __attribute__((aligned(16384))) page_table[4096];
+
+static inline void delay (unsigned long loops)
+{
+	__asm__ volatile ("1:\n"
+		"subs %0, %1, #1\n"
+		"bne 1b":"=r" (loops):"0" (loops));
+}
+static void mmu_setup(void)
+{
+	bd_t *bd = gd->bd;
+	int i, j;
+	u32 reg;
+
+	/* Set up an identity-mapping for all 4GB, rw for everyone */
+	for (i = 0; i < 4096; i++)
+		page_table[i] = i << 20 | (3 << 10) | 0x12;
+
+	/* Then, enable cacheable and bufferable for RAM only */
+	for (j = 0; j < CONFIG_NR_DRAM_BANKS; j++) {
+		for (i = bd->bi_dram[j].start >> 20;
+			i < (bd->bi_dram[j].start + bd->bi_dram[j].size) >> 20;
+			i++) {
+			page_table[i] = i << 20 | (3 << 10) | 0x1e; /* C=1 B=1*/
+		}
+	}
+
+	/* Copy the page table address to cp15 */
+	asm volatile("mcr p15, 0, %0, c2, c0, 0"
+		     : : "r" (page_table) : "memory");
+
+	/* Set the access control to all-supervisor */
+	asm volatile("mcr p15, 0, %0, c3, c0, 0"
+		     : : "r" (~0));
+
+	/* and enable the mmu */
+	reg = get_cr();	/* get control reg. */
+	delay(100);
+	set_cr(reg | CR_M);
+}
+#endif
+
+#ifndef CONFIG_SPL_BUILD
+int dram_init(void)
+{
+	unsigned int	size;
+
+	size = __raw_readl(GLOBAL_SOFTWARE2);
+	size = size & 0xfff00000;
+
+	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
+	gd->bd->bi_dram[0].size = size; /*PHYS_SDRAM_1_SIZE; */
+	gd->ram_size = size;
+
+//	mmu_setup();
+
+	return 0;
+}
+
+void enable_caches(void)
+{
+	icache_enable();
+}
+
+static void disable_remap(void)
+{
+	unsigned int	reg_val;
+
+	/* Disable ROM map */
+	reg_val = __raw_readl(GLOBAL_GLOBAL_CONFIG);
+	reg_val = reg_val | 0x0001;
+	__raw_writel(reg_val, GLOBAL_GLOBAL_CONFIG);
+
+	/* L2 filter start address */
+	__raw_writel(0x00000001, 0xf5010c00);
+}
+
+int board_init(void)
+{
+	GLOBAL_PIN_MUX_t gpm;
+
+	/* adress of boot parameters */
+	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x00000100;
+
+	disable_remap();
+
+	gpio_set_chip_configuration();
+
+	return 0;
+}
+#endif
+
--- a/boards.cfg
+++ b/boards.cfg
@@ -300,6 +300,7 @@ Active  arm         armv7          exyno
 Active  arm         armv7          exynos      samsung         trats2              trats2                                -                                                                                                                                 Piotr Wilczek <p.wilczek@samsung.com>
 Active  arm         armv7          exynos      samsung         universal_c210      s5pc210_universal                     -                                                                                                                                 Przemyslaw Marczak <p.marczak@samsung.com>
 Active  arm         armv7          highbank    -               highbank            highbank                              -                                                                                                                                 Rob Herring <robh@kernel.org>
+Active  arm         armv7          g2          cortina         x10dr               g2_x10dr				 g2_x10dr:					Hoang Tran <hoang.tran@greenwavesystems.com>
 Active  arm         armv7          keystone    ti              k2hk_evm            k2hk_evm                              -                                                                                                                                 Vitaly Andrianov <vitalya@ti.com>
 Active  arm         armv7          mx5         denx            m53evk              m53evk                                m53evk:IMX_CONFIG=board/denx/m53evk/imximage.cfg                                                                                  Marek Vasut <marek.vasut@gmail.com>
 Active  arm         armv7          mx5         esg             ima3-mx53           ima3-mx53                             ima3-mx53:IMX_CONFIG=board/esg/ima3-mx53/imximage.cfg                                                                             -
--- /dev/null
+++ b/include/configs/g2_x10dr.h
@@ -0,0 +1,453 @@
+/*
+ * (C) Copyright 2015
+ * Greenwave Systems Inc.
+ * Hoang Tran <hoang.tran@greenwavesystems.com>
+ *
+ * Configuration settings for the GWR-X10DR board.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+/*
+ * High Level Configuration Options
+ */
+#define CONFIG_G2
+#define CONFIG_SMP
+
+#define CONFIG_DISPLAY_CPUINFO
+#define CONFIG_DISPLAY_BOARDINFO
+
+#define CONFIG_LAST_STAGE_INIT			1
+
+#define CONFIG_SYS_NO_FLASH
+#define CONFIG_SYS_GENERIC_BOARD
+
+/*
+ * Enable kernel FIT image support
+ */
+#define CONFIG_FIT
+#define CONFIG_LIBFTD
+#define CONFIG_FIT_VERBOSE
+
+/*
+ * Enable signed kernel FIT image
+ */
+#define CONFIG_FIT_SIGNATURE
+#define CONFIG_RSA
+
+/*
+ * Enable u-boot Device Control Tree to embed kernel public key
+ */
+#define CONFIG_OF_CONTROL
+#define CONFIG_OF_SEPARATE
+
+#define CONFIG_DEFAULT_DEVICE_TREE		g2_x10dr
+
+/*-----------------------------------------------------------------------
+ * Physical Memory Map
+ */
+#define CONFIG_NR_DRAM_BANKS			1
+#define PHYS_SDRAM_1				0x00000000
+#define PHYS_SDRAM_1_SIZE			0x10000000
+#define CONFIG_SYS_SDRAM_BASE			PHYS_SDRAM_1
+#define CONFIG_SYS_MALLOC_LEN			(1 << 20)	/* Reserved for malloc	*/
+#define CONFIG_SYS_INIT_SP_ADDR			0x08000000
+#define CONFIG_SYS_FLASH_BASE			0xe0000000
+
+/* Timer Configuration */
+#define CONFIG_SYS_HZ				(1000)
+
+/*-----------------------------------------------------------------------
+ * Miscellaneous configurable options
+ */
+#define CONFIG_BOOTDELAY			1
+#undef CONFIG_ZERO_BOOTDELAY_CHECK
+#define CONFIG_SYS_LONGHELP
+#define CONFIG_SYS_CBSIZE			1024
+
+#define CONFIG_SYS_PROMPT			"=> "
+#define CONFIG_CMDLINE_EDITING
+#define CONFIG_AUTO_COMPLETE
+#define CONFIG_SYS_CONSOLE_INFO_QUIET		/* don't print console @ startup*/
+
+#define CONFIG_SYS_HUSH_PARSER			/* Use the HUSH parser		*/
+
+#define CONFIG_LOADS_ECHO			/* echo on for serial download	*/
+#define CONFIG_SYS_LOADS_BAUD_CHANGE		/* allow baudrate change	*/
+
+/* Print Buffer Size */
+#define CONFIG_SYS_PBSIZE			(CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
+#define CONFIG_SYS_MAXARGS			32
+#define CONFIG_SYS_LOAD_ADDR			0x01600000
+
+#define CONFIG_SYS_TEXT_BASE			0x04000000
+
+#define CONFIG_CMD_MEMORY
+#define CONFIG_CMD_RUN
+#define CONFIG_CMD_LOADB
+#define CONFIG_CMD_SOURCE
+
+/*
+ * BOOTP options
+ */
+#define CONFIG_BOOTP_BOOTFILESIZE
+#define CONFIG_BOOTP_BOOTPATH
+#define CONFIG_BOOTP_GATEWAY
+#define CONFIG_BOOTP_HOSTNAME
+#define CONFIG_BOOTP_SUBNETMASK
+
+#define CONFIG_PREBOOT "setenv bootargs"
+#define CONFIG_BOOTCOMMAND "run set_mtdparts mtd_boot;if test $? -ne 0;then run toggle_boot_partition;fi;reset"
+
+#define CONFIG_CMDLINE_TAG			/* enable passing of ATAGs */
+#define CONFIG_SETUP_MEMORY_TAGS
+#define CONFIG_INITRD_TAG
+
+#define CONFIG_CMD_BDI
+#define CONFIG_CMD_BOOTD
+#define CONFIG_CMD_I2C
+#define CONFIG_CMD_IMI
+
+/*-----------------------------------------------------------------------
+ * Serial configuration
+ */
+#define CONFIG_G2_SERIAL
+#define CONFIG_CONS_INDEX			0
+#define CONFIG_BAUDRATE				115200
+#define CONFIG_SYS_BAUDRATE_TABLE		{ 9600, 19200, 38400, 57600, 115200 }
+
+/*-----------------------------------------------------------------------
+ * I2C configuration
+ */
+#define CONFIG_HARD_I2C
+#define CONFIG_G2_I2C                          1
+#define CONFIG_SYS_I2C_SPEED                   100000
+#define CONFIG_LP5521
+
+/*-----------------------------------------------------------------------
+ * NAND flash
+ */
+#define CONFIG_CMD_NAND				1
+#define CONFIG_NAND_G2				1
+#define CONFIG_SYS_MAX_NAND_DEVICE		1
+#define CONFIG_SYS_NAND_NO_SUBPAGE_WRITE	1
+#define CONFIG_CS752X_NAND_ECC_HW_BCH_8_512	1
+#define CONFIG_SYS_NAND_SUBPAGE_SIZE		2048
+
+#define CONFIG_SYS_NAND_BASE			0xE0000000
+
+#define CONFIG_ENV_IS_IN_NAND
+#define CONFIG_ENV_SIZE				0x020000
+#define CONFIG_ENV_OFFSET			0x100000
+#define CONFIG_ENV_RANGE			0x080000
+#define CONFIG_ENV_OFFSET_REDUND		0x180000
+
+#define CONFIG_CMD_SAVEENV			1
+
+/*-----------------------------------------------------------------------
+ * RTL8367SB/QCASW Switch chip
+ */
+#define CONFIG_RTL83XX				1
+//#define CONFIG_QCASW				1
+
+#/*-----------------------------------------------------------------------
+ * Network interfaces
+ */
+#define CONFIG_CMD_NET
+#define CONFIG_G2_EMAC				1
+#define CONFIG_G2_EMAC_ACT			2
+#define CONFIG_G2_PHYADDR_GMAC0			1
+#define CONFIG_G2_PHYADDR_GMAC1			2
+#define CONFIG_G2_PHYADDR_GMAC2			0
+
+#define CONFIG_CMD_PING
+#define CONFIG_CMD_DHCP
+
+/*
+ * Static configuration when assigning fixed address
+ */
+#define CONFIG_ETHADDR			28:C6:8E:11:22:33
+#define CONFIG_ETH1ADDR			28:C6:8E:44:55:66
+#define CONFIG_ETH2ADDR			28:C6:8E:77:88:99
+#define CONFIG_NETMASK			255.255.255.0
+#define CONFIG_IPADDR			192.168.1.122
+#define CONFIG_SERVERIP			192.168.1.100
+#define CONFIG_GATEWAYIP		192.168.1.1
+#define CONFIG_BOOTFILE			"uImage"
+
+/* Allow overwrite of ethaddr */
+#define CONFIG_ENV_OVERWRITE
+
+/*-----------------------------------------------------------------------
+ * MTD, UBI ...
+ *----------------------------------------------------------------------*/
+#define CONFIG_MTD_DEVICE
+#define CONFIG_MTD_PARTITIONS
+#define CONFIG_CMD_MTDPARTS
+#define MTDIDS_DEFAULT "nand0=cs752x_nand_flash"
+#define MTDPARTS_DEFAULT "mtdparts=cs752x_nand_flash:512k@0x80000(bootloader),512k@0x100000(uboot_env_pri),512k@0x180000(uboot_env_sec),-@0x800000(ubi)"
+
+#define CONFIG_CMD_UBI
+#define CONFIG_CMD_UBIFS
+#define CONFIG_RBTREE
+#define CONFIG_LZO
+
+/*-----------------------------------------------------------------------
+ * Default environment
+ *----------------------------------------------------------------------*/
+#define CONFIG_UBOOT_DEF_ENV \
+    "netdev=eth2\0" \
+    "baudrate=115200\0" \
+    "hostname=x10dr\0" \
+    "naddr_post=0x20000\0" \
+    "nsize_post=0x40000\0" \
+    "naddr_uboot=0x80000\0" \
+    "nsize_uboot=0x60000\0" \
+    "naddr_uboot_env_pri=0x100000\0" \
+    "naddr_uboot_env_sec=0x180000\0" \
+    "naddr_ubi=0x800000\0" \
+    "raddr_kernel=0x5000000\0" \
+    "raddr_tftp=0x5000000\0" \
+    "user_dir=x10dr\0" \
+    "ramdisk_file=ramdisk.itb\0" \
+    "ubifs_file=ubifs.img\0" \
+    "bootfile=uImage\0" \
+    "boot_partition=0\0" \
+    "mtdparts=" MTDPARTS_DEFAULT "\0" \
+    "ramargs=setenv bootargs init=/init root=/dev/ram rw\0" \
+    "addtty=setenv bootargs ${bootargs} console=ttyS0,${baudrate}\0" \
+    "addmisc=setenv bootargs ${bootargs} SB_PHY=PSXX qm_int_buff=${QM_INT_BUFF} boot_partition=${boot_partition}\0" \
+    "addmacaddr=setenv bootargs ${bootargs} ethaddr0=${ethaddr} ethaddr1=${eth1addr} ethaddr2=${eth2addr} qtn0addr=${qtn0addr} qtn1addr=${qtn1addr} wlan0addr=${wlanaddr0} tvaddr=${tvaddr} guestaddr=${guestaddr}\0" \
+    "addmtdparts=setenv bootargs ${bootargs} ${mtdparts}\0" \
+    "set_current_part=if test ${boot_partition} -eq 0;then setenv current_part rootfs_even;else setenv current_part rootfs_odd;fi\0" \
+    "set_current_sig=if test ${boot_partition} -eq 0;then setenv current_sig sig_even;else setenv current_sig sig_odd;fi\0" \
+    "toggle_boot_partition=if test ${boot_partition} -eq 0;then setenv boot_partition 1;else setenv boot_partition 0;fi;sa\0" \
+    "mtd_boot=run set_current_part " \
+        "&& ubi part ubi "\
+        "&& ubifsmount ubi:${current_part} "\
+        "&& ubifsload ${raddr_kernel} /boot/${bootfile};"\
+        "run ramargs addtty addmisc addmacaddr addmtdparts;source ${raddr_kernel}:bootscript;bootm ${raddr_kernel}\0" \
+    "net_boot=tftp ${raddr_kernel} ${user_dir}/${ramdisk_file} "\
+        "&& run ramargs addtty addmisc addmacaddr addmtdparts " \
+        "&& bootm ${raddr_kernel}\0" \
+    "bootcmd=run mtd_boot;if test $? -ne 0;then run toggle_boot_partition;fi;reset\0" \
+    "root_upd=run set_current_part set_current_sig " \
+        "&& ubi part ubi "\
+        "&& tftp ${raddr_tftp} ${user_dir}/rootfs.ubifs " \
+        "&& ubi writevol ${raddr_tftp} ${current_part} ${filesize} " \
+        "&& tftp ${raddr_tftp} ${user_dir}/sig.ubifs " \
+        "&& ubi writevol ${raddr_tftp} ${current_sig} ${filesize}\0" \
+    "ubi_upd=tftp ${raddr_tftp} ${user_dir}/${ubifs_file} "\
+        "&& nand erase.part ubi "\
+        "&& nand write ${raddr_tftp} ${naddr_ubi} ${filesize}\0" \
+    "uboot_upd=tftp ${raddr_tftp} ${user_dir}/u-boot-dtb.bin.signed " \
+        "&& nand erase ${naddr_uboot} ${nsize_uboot} " \
+        "&& nand write ${raddr_tftp} ${naddr_uboot} ${filesize}\0" \
+    "post_upd=tftp ${raddr_tftp} ${user_dir}/post.bin.signed " \
+        "&& nand erase ${naddr_post} ${nsize_post} " \
+        "&& nand write ${raddr_tftp} ${naddr_post} ${filesize}\0" \
+    "erase_env=nand erase ${naddr_uboot_env_pri} 0x100000\0"
+
+#define CONFIG_EXTRA_ENV_SETTINGS									\
+	CONFIG_UBOOT_DEF_ENV
+
+#define GLOBAL_GPIO_MUX_BASE	GLOBAL_GPIO_MUX_0
+#define CONFIG_SYS_G2_GPIO_TABLE {									\
+{													\
+/* GPIO Core 0 */											\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[00] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[01] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[02] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[03] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[04] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[05] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[06] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[07] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[08] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[09] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[10] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[11] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[12] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[13] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[14] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[15] */						\
+{PER_GPIO0_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[16] */						\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[17] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[18] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[19] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[20] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[21] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_ALT, GPIO_NO_CHG},/* GPIO0[22] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[23] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[24] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_SEL, GPIO_OUT_1},/* GPIO0[25] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[26] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[27] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[28] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[29] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[30] */					\
+{PER_GPIO0_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO0[31] */					\
+},													\
+{													\
+/* GPIO Core 1 */											\
+{PER_GPIO1_CFG, GPIO_OUT, GPIO_SEL, GPIO_OUT_1},/* GPIO1[00] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[01] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[02] */						\
+{PER_GPIO1_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[03] */					\
+{PER_GPIO1_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[04] */					\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[05] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[06] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[07] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO1[08] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO1[09] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[10] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[11] */						\
+{PER_GPIO1_CFG, GPIO_OUT, GPIO_SEL, GPIO_OUT_1},/* GPIO1[12] */						\
+{PER_GPIO1_CFG, GPIO_OUT, GPIO_SEL, GPIO_OUT_1},/* GPIO1[13] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[14] */						\
+{PER_GPIO1_CFG, GPIO_OUT, GPIO_SEL, GPIO_OUT_0},/* GPIO1[15] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[16] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[17] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[18] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[19] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[20] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[21] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[22] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[23] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[24] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[25] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[26] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[27] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[28] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[29] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[30] */						\
+{PER_GPIO1_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO1[31] */						\
+},													\
+{													\
+/* GPIO Core 2 */											\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[00] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[01] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[02] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[03] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[04] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[05] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[06] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[07] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[08] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[09] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[10] */						\
+{PER_GPIO2_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[11] */					\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[12] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[13] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[14] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[15] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[16] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[17] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[18] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[19] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[20] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[21] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[22] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[23] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[24] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[25] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[26] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[27] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[28] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[29] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[30] */						\
+{PER_GPIO2_CFG, GPIO_IN, GPIO_SEL, GPIO_NO_CHG},/* GPIO2[31] */						\
+},													\
+{													\
+/* GPIO Core 3 */											\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[00] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[01] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[02] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[03] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[04] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[05] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[06] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[07] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[08] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[09] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[10] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[11] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[12] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[13] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[14] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[15] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[16] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[17] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[18] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[19] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[20] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[21] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[22] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[23] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[24] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[25] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[26] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[27] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[28] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[29] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[30] */						\
+{PER_GPIO3_CFG, GPIO_IN, GPIO_ALT, GPIO_NO_CHG},/* GPIO3[31] */						\
+},													\
+{													\
+/* GPIO Core 4 */											\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[00] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[01] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[02] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[03] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[04] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[05] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[06] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[07] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[08] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[09] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[10] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[11] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[12] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[13] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[14] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[15] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[16] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[17] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[18] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[19] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[20] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[21] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[22] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[23] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[24] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[25] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[26] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[27] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[28] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[29] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[30] */					\
+{PER_GPIO4_CFG, GPIO_OUT, GPIO_SEL, GPIO_NO_CHG},/* GPIO4[31] */					\
+}													\
+}
+
+#endif /* __CONFIG_H */
+
--- a/tools/env/Makefile
+++ b/tools/env/Makefile
@@ -30,5 +30,7 @@ fw_printenv_unstripped-objs := fw_env.o
 quiet_cmd_strip = STRIP   $@
       cmd_strip = $(STRIP) -o $@ $<
 
+HOSTLOADLIBES_fw_printenv_unstripped = -static -static-libgcc
+
 $(obj)/fw_printenv: $(obj)/fw_printenv_unstripped FORCE
 	$(call if_changed,strip)
